# ============================================================================
# # 파이썬에서 제공하는 기본 내장함수
# # 출력 함수(print)
# print()   # 줄바꿈 기능 & 출력
# print("안녕")


# # 길이 구하기 함수(len)
# length = len("python")
# print("python length:", length)
# print(len("python"))


# # 나눈 몫과 나머지 구하기(divmod)
# q, r = divmod(20, 3)   # 전달 인자값, 인수, argument
# print("몫:%d 나머지:%d" % (q, r))
# ============================================================================


# ============================================================================
# # 나만의 함수 만들기
# # 1.어떠한 기능을 하는 함수를 만들지 생각한다. 함수명 작성
# # 2.input 값으로 무엇을 받을 것인지 생각한다.
# # 3.output 값으로 무엇을 돌려줄 것인지 생각한다.
# # 4.구현한다.
# ============================================================================


# # 함수의 기본구조 def 함수명(매개변수)
# # 함수의 네가지 상태
# ============================================================================
# # 입력값, 출력값이 있는 가장 기본적인 함수 구조
# def num_plus(a, b):
#     result = a + b
#     return result   #result 없애고 a+b를 해도 무관

# plusvalue = num_plus(1,2)
# print(plusvalue)
# ============================================================================


# ============================================================================
# # 연습문제 01(입출력이 있는 함수)
# def mul (x, y) :
#     return x*y
# print(mul(2,3))
# ============================================================================


# ============================================================================
# # 연습문제 02(입출력이 있는 함수)
# # 정수 하나를 입력 받아 2제곱의 결과를 돌려주는 함수를 만들고 호출한 값을 출력하라.
# def squared(n):
#     result = n * n
#     return result

# number = int(input("정수를 입력하세요:"))
# result = squared(number)
# print("%d의 제곱은 %d이다." % (number, result))
# ============================================================================


# ============================================================================
# # 연습문제 03(입출력이 있는 함수)
# # 하나의 정수를 입력 받아 짝수면 True 홀수면 False을 돌려 주는 함수를 만드세요.
# def is_even(n):
#     if n % 2 == 0:
#         return True
#     else :
#         return False

# number = int(input("[홀짝 판별기]정수를 하나를 입력하세요(짝수 : True, 홀수 : False) : "))
# print(is_even(number))
# ============================================================================



# ============================================================================
# # 연습문제 04(원의 넓이)
# def circle_area(radius) :
#     result = radius**2 * 3.14
#     return result
# radius = float(input("반지름의 길이를 입력하세요. "))
# print(f"원의 넓이 : {circle_area(radius)}")
# ============================================================================


# ============================================================================
# # 1부터 n까지의 합계, 단, n의값은 100을 넘을수는 없다(break 활용)
# # ex) 1~10까지의 합 : 55, 1~100까지의 합 : 5050, 1~200까지의 합 : 5050
# def sum_limit_100(n):
#     sum = 0
#     for num in range(1, n + 1):  # 1 ~ n
#         if num > 100:
#             break
#             # return '오류'    
#         sum += num
#     return sum

# n = int(input("수를 입력하세요 :"))
# print(sum_limit_100(n))
# ============================================================================


# ============================================================================
# # 변수 text에 할당한 문자열의 단어 게수를 구하는 함수
# def w_count(text) :
#     words = text.split()
#     return len(words)

# text = "To be, or Not to Be. That Is The Question"
# print("문자열의 단어 개수는 %d개 입니다." % w_count(text))
# ============================================================================


# ============================================================================
# # 입력값은 있지만 결과값이 없는 함수 구조 01
# def hello(name):
#     print(name, 'hello')
# print(hello("메가스터디"))
# ============================================================================


# ============================================================================
# # 입력값은 있지만 결과값이 없는 함수 구조 02
# def minus(x, y): 
#     result = x - y
#     print("%d에서 %d뺀 결과값은 %d입니다." % (x, y, result))

# a = int(input("첫번째 숫자를 입력하세요:"))
# b = int(input("두번째 숫자를 입력하세요:"))
# minus(a, b)
# ============================================================================


# ============================================================================
# # 입력값은 있지만 결과값이 없는 함수 구조 03
# # 두수를 받아서 몫과 나머지를 출력하는 함수를 만드세요.(리턴값이 없다.)
# def divide(n1, n2):   # parameter, 매개변수
#     q = n1 // n2
#     r = n1 % n2
#     print("몫: %d, 나머지: %d" % (q, r))

# number1 = int(input("나눗셈을 할 대상(정수 하나)를 입력하세요 : "))
# number2 = int(input("몇으로 나누실껀가요? : "))
# divide(number1, number2)

# # q, r = divmod(10, 3) 위 함수의 목적과 똑같은... 만들어져 있는 내장함수(리턴값이 있다.)
# ============================================================================


# ============================================================================
# 입력값은 있지만 결과값이 없는 함수 구조 04
# 영어 단어를 입력 받고 'a' 가 몇 개 들어 있는지 출력하세요.
# def word_count(word, char):
#     word_count = word.count(char)
#     print("%s의 개수는 %d개 입니다." % (char, word_count))

# eng_word = input("영어 단어를 하나 입력하세요:")
# word_count(eng_word, 'a')
# ============================================================================


# ============================================================================
# # 입력값은 있지만 결과값이 없는 함수 구조 05
# # 아래 사진은 오름차순 정렬 프로그램 코드이다. 
# # 해당 로직을 함수(func_up)로 변형하고, 오름차순으로 정렬하라
# lst = [93, 45, 21, 30, 20, 94, 66, 71, 45]
# #오름차순
# def func_up(lst) :
#     for a in range(0,len(lst)-1):
#         for b in range(a+1,len(lst)):
#             if lst[a] > lst[b]:
#                 (lst[a], lst[b]) = (lst[b], lst[a])
#                 tmp = lst[a]
#                 lst[a] = lst[b]
#                 lst[b] = tmp
# print(lst)
# func_up(lst)
# print(lst)
# ============================================================================


# ============================================================================
# # 입력값은 없지만 결과값이 있는 함수 구조
# def hello():
#     return 'hello'
# print(hello())
# # print(hello) #라고 했을때 hello의 값은 뭐지?
# ============================================================================

# # 연습문제2-2
# def hello() :
#     return 'hello python!'
# print(hello())

# ============================================================================
# # 입력값과 결과값이 모두 없는 함수 구조
# def hello():
#     print('hello')
# hello()
# ============================================================================

# # 연습문제2-1
# def hello() :
#     print('hello python!')
# hello()






# ============================================================================
# # 입력값이 몇개인지 모를때 & 여러개 받아야 하는 함수 구조 01 : *args
# def num_plus(*args) :
#     print(type(args), args)
#     result = 0
#     for i in args:
#         result += i
#     return result

# print("시작")
# result = num_plus(1, 2, 3, 4, 5)
# print(result)
# ============================================================================


# ============================================================================
# # 입력값이 몇개인지 모를때 & 여러개 받아야 하는 함수 구조 02 : *args
# # 4개의 값을 받아서 평균을 돌려주는 함수를 만들고 호출한 값을 출력하라.
# def get_average(s1, s2, s3, s4):
#     average = (s1 + s2 + s3 + s4) / 4
#     return average

# s1, s2, s3, s4 = input("4개의 점수를 입력하세요:").split()
# s1 = int(s1)
# s2 = int(s2)
# s3 = int(s3)
# s4 = int(s4)

# result = get_average_many(s1, s2, s3, s4)
# ============================================================================


# ============================================================================
# def get_average_many(*scores):
#     sum = 0
#     for score in scores:
#         sum += score
#     return sum / len(scores)

# result = get_average_many(1, 32, 51, 32, 20, 50, 60, 60)
# print("평균 : ", result)
# ============================================================================


# ============================================================================
# # 입력값이 몇개인지 모를때의 함수 구조 03
# def names_func (name, *names) :
#     print(name)
#     print(names)
# names_func('서울시', '강남구', '메가스터디', '4층', 'python')
# ============================================================================


# ============================================================================
# # 입력값이 몇개인지 모를때의 함수구조 04
# from statistics import mean, variance, stdev

# def statis_func (choice, *data) :
#     if (choice == 'avg') :
#         return mean(data)      #평균, mean
#     elif (choice == 'var') :
#         return variance(data)  #분산, variance
#     elif (choice == 'std') :
#         return stdev(data)     #표준편차, standard deviation
#     else :
#         return '오류, 재입력 요망'
    
# print('avg = ', statis_func('avg',1,2,3,4,5))
# print('var = ', statis_func('var',1,2,3,4,5))
# print('std = ', statis_func('std',1,2,3,4,5))
# ============================================================================


# ============================================================================
# # 연습문제 (선택적 함수 만들기)
# def cal(choice, num1, num2) :
#     if choice == '+' :
#         return num1 + num2
#     elif choice == '-' :
#         return num1 - num2
#     elif choice == '*' :
#         return num1 * num2
#     elif choice == '/':
#         return num1 / num2
#     else :
#         print("프로그램에 오류가 있어요 연산자를 다시 입력하세요")

# choice = input("어떤 연산을 하실껀가요? (+,-,*,/)\n")
# num1 = int(input("첫번째 정수를 입력하세요. "))
# num2 = int(input("두번째 정수를 입력하세요. "))
# result = cal(choice, num1, num2)
# print(f"{num1}과 {num2}의 {choice}연산 결과는 {result}입니다.")
# ============================================================================



# a=1
# def test(a) :
#     a = 2

# print(test(a))
# print(a)

# a=[1]
# def test(a) :
#     a = [2]

# print(test(a))
# print(a)

# a=1
# b=1
# print(id(a), a)
# print(id(b), b)

# a='PYTHON'
# b='PYTHON1'
# print(id(a), a)
# print(id(b), b)

# a=[1]
# b=[1]
# print(id(a), a)
# print(id(b), b)