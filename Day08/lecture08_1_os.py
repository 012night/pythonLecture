# ========================================================================
# # 폴더 생성 및 이동, 삭제 시 사용 OS 모듈
# import os
# ========================================================================

# ========================================================================
# # getcwd() 현재 작업중인 디렉토리의 경로를 보여주는 함수
# print(os.getcwd())
# ========================================================================

# ========================================================================
# # chdir() 현재 작업중인 디렉토리의 경로를 이동하는 함수 
# # \n, \t 등 문자열 조작하는 이스케이프 함수 쓸때 조심하라. \\로 작성해서 오류 없게...
# os.chdir('C:\chi_py_project\Day08')
# print(os.getcwd())
# ========================================================================

# ========================================================================
# # 특정 디렉토리안에 있는 파일등의 목록을 보여주는 listdir
# print(os.listdir('C:\\'))
# ========================================================================

# ========================================================================
# # 디렉토리 구조 보기 예쁘게
# for dir_list in os.listdir('C:\chi_py_project') :
#     print(dir_list)
# ========================================================================

# ========================================================================
# # 폴더를 만드는 함수(한번에 하나만) mkdir
# os.mkdir('test')
# os.mkdir('test\\apple')
# os.mkdir('test\\apple\\banana')
# os.mkdir('C:\chi_py_project\\test\\apple\\banana\desk')
# ========================================================================

# ========================================================================
# # 비어있는 폴더 하나만 삭제하는 함수 rmdir
# os.rmdir("C:\chi_py_project\\test\\apple\\banana\desk")
# os.rmdir("test\\apple\\banana")
# ========================================================================

# ========================================================================
# # 하위에 폴더를 연속적으로 만들어주는 함수 makedirs
# os.makedirs('temp1\\temp2\\temp3') 
# ========================================================================

# ========================================================================
# # 폴더 재귀적으로 삭제하는 함수 removedirs
# os.removedirs("temp1\\temp2\\temp3")
# ========================================================================

# ========================================================================
# # 안에 파일이 존재할때 지우는 파일관리 shutil 모듈
# import shutil
# os.makedirs('raw\\temp1\\temp2\hyhrh')
# shutil.rmtree('C:\chi_py_project\\raw\\temp1')
# ========================================================================

# ========================================================================
# # 지금까지 폴더를 다루는 함수였다면 이번에는 파일을 다루는 함수
# # txt형식으로 저장하는 기능은 파이썬 안에 내장되어있다. 함수는 어렵지 않으나 만드는 순서가 중요하다.
# ========================================================================

# ========================================================================
# import os
# # print(os.getcwd())
# # os.makedirs("txt_dir")
# os.chdir("txt_dir")
# print(os.getcwd())
# ========================================================================

# ========================================================================
# # 1.비어있는 파일을 우선 준비한다. A4준비하듯 r읽기전용 w쓰기 a붙여쓰기
# file = open("test1.txt","w")
# # 2. 준비된 종이에 내용을 작성(현재까지는 메모리에 쓴것)
# file.write(" 텍스트 파일에 처음 쓴 글입니다")
# # 3. 하드에 기록(디버그 모드로 보면 좋음)
# file.close()

# # w 쓰기, 덮어쓰기
# file2 = open("test1.txt","w")
# file2.write("텍스트 파일에 두번째 쓴 글입니다\n")
# file2.close()
# ========================================================================

# ========================================================================
# # a 붙여쓰기
# file3 = open("test1.txt","a")
# file3.write("텍스트 파일에 추가모드로 쓴 글입니다\n")
# file3.close( )

# file4 = open("test1.txt","a")
# file4.write("텍스트 파일에 네번째 쓴 글입니다\n")
# file4.close( )

# # r 읽기전용
# file5 = open("test1.txt","r")
# print(file5.readline())
# print(file5.readline())
# ========================================================================

# ========================================================================
# # 개행 전까지 읽어오기 -> 문자열을 반환
# file = open("test1.txt","r")
# print(file.readline())
# file.close( )
# ========================================================================

# ========================================================================
# # 개행 기준으로 리스트로 불러오기 -> List[문자열]을 반환
# file = open("test1.txt","r")
# print(file.readlines())
# file.close( )

# # for msg in file5.readlines() :
# #     print(msg)
# ========================================================================

# ========================================================================
# # n바이트씩 읽어오기 -> 문자N개를 반환
# file = open("test1.txt","r")
# print(file.read(5))
# file.close( )
# os.remove("test1.txt")
# ========================================================================

# ========================================================================
# # file.close()를 하지 않고 실행시 삭제 안되는걸 확인 하라
# file = open("C:\chi_py_project\\text_01.txt","w")
# file.close()
# os.remove('C:\chi_py_project\\text_01.txt')
# ========================================================================